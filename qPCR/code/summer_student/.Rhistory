install.packages("BiocConductor")
BiocManager::install("GenomicRanges")
install.packages("BiocManager")
BiocManager::install("GenomicRanges")
# Check versions for reproducibility
sessionInfo()
# Check if packages can be updated
valid()
a <- 5
setwd("~/Desktop/CU_coding/qPCR/raw_data")
# (CHANGE THESE TO SUIT YOUR NEEDS)
# make sure your qPCR_data and your R scripts are in the same folder (directory)
# and that this is set as your working directory
skip_meta = 23 # number of metadata rows to skip
qpcr_data <- read.csv("~/Desktop/CU_coding/qPCR/raw_data/Exp9_real_4.4.24_20240404_122458_Results_20240404_141702.csv",
skip = skip_meta,
stringsAsFactors = FALSE) # put in path to YOUR data
View(qpcr_data)
library(tidyr)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(ggbreak)
library(ggforce)
setwd("~/Desktop/CU_coding/qPCR/code/summer_student")
setwd("~/Desktop/CU_coding/qPCR/code/summer_student")
library(tidyr)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(ggbreak)
library(ggforce)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
View(qpcr_data)
# Single Graph -------------------------------
# here is some simple code to make one plot
# Local variables:
probe = "JAK1" # list of probes of interest
reference = "GAPDH" # probe that you're "normalizing" to
ctrl_sample = "pTRIP Luciferase" # sample you're making everything "relative" to
plot_title = " Baseline Expression in U4Cs after 48h of Transfection"
fill_color = "#648FFF"
# and here are some colors to use!
c("#648FFF", "#785EF0", "#DC267F", "#FE6100", "#FFB000")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(rel_conc_data)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(rel_conc_data)
# one graph with Path #2:
rel_conc_data <- rel_conc_p2(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(qpcr_data)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# one graph with Path #2:
rel_conc_data <- rel_conc_p2(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# (CHANGE THESE TO SUIT YOUR NEEDS)
# make sure your qPCR_data and your R scripts are in the same folder (directory)
# and that this is set as your working directory
skip_meta = 23 # number of metadata rows to skip
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# (CHANGE THESE TO SUIT YOUR NEEDS)
# make sure your qPCR_data and your R scripts are in the same folder (directory)
# and that this is set as your working directory
skip_meta = 23 # number of metadata rows to skip
qpcr_data <- read.csv("~/Desktop/CU_coding/qPCR/raw_data/Exp9_real_4.4.24_20240404_122458_Results_20240404_141702.csv",
skip = skip_meta,
stringsAsFactors = FALSE) # put in path to YOUR data
# Single Graph -------------------------------
# here is some simple code to make one plot
# Local variables:
probe = "JAK1" # list of probes of interest
reference = "GAPDH" # probe that you're "normalizing" to
ctrl_sample = "pTRIP Luciferase" # sample you're making everything "relative" to
plot_title = " Baseline Expression in U4Cs after 48h of Transfection"
fill_color = "#648FFF"
# and here are some colors to use!
c("#648FFF", "#785EF0", "#DC267F", "#FE6100", "#FFB000")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
rel_conc_bar
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# (CHANGE THESE TO SUIT YOUR NEEDS)
# make sure your qPCR_data and your R scripts are in the same folder (directory)
# and that this is set as your working directory
skip_meta = 23 # number of metadata rows to skip
qpcr_data <- read.csv("~/Desktop/CU_coding/qPCR/raw_data/Exp9_real_4.4.24_20240404_122458_Results_20240404_141702.csv",
skip = skip_meta,
stringsAsFactors = FALSE) # put in path to YOUR data
# Single Graph -------------------------------
# here is some simple code to make one plot
# Local variables:
probe = "JAK1" # list of probes of interest
reference = "GAPDH" # probe that you're "normalizing" to
ctrl_sample = "pTRIP Luciferase" # sample you're making everything "relative" to
plot_title = " Baseline Expression in U4Cs after 48h of Transfection"
fill_color = "#648FFF"
# and here are some colors to use!
c("#648FFF", "#785EF0", "#DC267F", "#FE6100", "#FFB000")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(rel_conc_data)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# (CHANGE THESE TO SUIT YOUR NEEDS)
# make sure your qPCR_data and your R scripts are in the same folder (directory)
# and that this is set as your working directory
skip_meta = 23 # number of metadata rows to skip
qpcr_data <- read.csv("~/Desktop/CU_coding/qPCR/raw_data/Exp9_real_4.4.24_20240404_122458_Results_20240404_141702.csv",
skip = skip_meta,
stringsAsFactors = FALSE) # put in path to YOUR data
# Single Graph -------------------------------
# here is some simple code to make one plot
# Local variables:
probe = "JAK1" # list of probes of interest
reference = "GAPDH" # probe that you're "normalizing" to
ctrl_sample = "pTRIP Luciferase" # sample you're making everything "relative" to
plot_title = " Baseline Expression in U4Cs after 48h of Transfection"
fill_color = "#648FFF"
# and here are some colors to use!
c("#648FFF", "#785EF0", "#DC267F", "#FE6100", "#FFB000")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
View(qpcr_data)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
# data pre-processing - averaging technical replicates
# Group the data by the "Target" column and calculate the mean Cq for each group
qpcr_data$Cq <- as.numeric(qpcr_data$Cq)
avg_cq_values <- qpcr_data %>%
group_by(Sample, Target, Well.Position) %>%
summarize(Cq = mean(Cq, na.rm = TRUE))
View(avg_cq_values)
# select only columns from qpcr_data that are needed and ensure that values are class numeric
tidy_qpcr_data <- qpcr_data %>%
filter(Target != is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
group_by(Well.Position) %>%
mutate(Cq = as.numeric(Cq))
View(tidy_qpcr_data)
View(avg_cq_values)
View(tidy_qpcr_data)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH, JAK1)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
avg_ref_Cq <- ref_data %>% # calculate average reference Cq for each sample from ref_data
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
View(avg_ref_Cq)
delta_cq_data <- test_data %>% # merge the average ref_Cq values with test_data
left_join(avg_ref_Cq, by = "Sample") %>%
group_by(Sample) %>%
mutate(delta_Cq = Cq - avg_ref_Cq) %>%
mutate(delta_Cq = as.numeric(delta_Cq))
View(delta_cq_data)
# find the mean delta_cq for your ctrl_sample (to which every other sample is "relative")
mean_ctrl_sample_delta <- mean(delta_cq_data$delta_Cq[delta_cq_data$Sample == ctrl_sample],
na.rm = TRUE)
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - mean_ctrl_sample_delta)
View(delta_delta_cq_data)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
View(rel_conc_data)
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
View(qpcr_data)
View(ref_data)
View(rel_conc_data)
# data pre-processing - averaging technical replicates
# Group the data by the "Target" column and calculate the mean Cq for each group
qpcr_data$Cq <- as.numeric(qpcr_data$Cq)
avg_cq_values <- qpcr_data %>%
group_by(Sample, Target, Well.Position) %>%
summarize(Cq = mean(Cq, na.rm = TRUE))
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(rel_conc_data)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# (CHANGE THESE TO SUIT YOUR NEEDS)
# make sure your qPCR_data and your R scripts are in the same folder (directory)
# and that this is set as your working directory
skip_meta = 23 # number of metadata rows to skip
qpcr_data <- read.csv("~/Desktop/CU_coding/qPCR/raw_data/Exp9_real_4.4.24_20240404_122458_Results_20240404_141702.csv",
skip = skip_meta,
stringsAsFactors = FALSE) # put in path to YOUR data
# Single Graph -------------------------------
# here is some simple code to make one plot
# Local variables:
probe = "JAK1" # list of probes of interest
reference = "GAPDH" # probe that you're "normalizing" to
ctrl_sample = "pTRIP Luciferase" # sample you're making everything "relative" to
plot_title = " Baseline Expression in U4Cs after 48h of Transfection"
fill_color = "#648FFF"
# Check if the dataset has only the column "Well" and rename it to "Well.Position" if true
if ("Well" %in% colnames(qpcr_data) & !("Well.Position" %in% colnames(qpcr_data))) {
colnames(qpcr_data)[colnames(qpcr_data) == "Well"] <- "Well.Position"
}
# data pre-processing - averaging technical replicates
# Group the data by the "Target" column and calculate the mean Cq for each group
qpcr_data$Cq <- as.numeric(qpcr_data$Cq)
avg_cq_values <- qpcr_data %>%
group_by(Sample, Target, Well.Position) %>%
summarize(Cq = mean(Cq, na.rm = TRUE))
View(avg_cq_values)
# select only columns from qpcr_data that are needed and ensure that values are class numeric
tidy_qpcr_data <- avg_cq_values %>%
filter(Target != is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
group_by(Well.Position) %>%
mutate(Cq = as.numeric(Cq))
View(tidy_qpcr_data)
View(avg_cq_values)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(tidy_qpcr_data)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH, JAK1)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
avg_ref_Cq <- ref_data %>% # calculate average reference Cq for each sample from ref_data
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
delta_cq_data <- test_data %>% # merge the average ref_Cq values with test_data
left_join(avg_ref_Cq, by = "Sample") %>%
group_by(Sample) %>%
mutate(delta_Cq = Cq - avg_ref_Cq) %>%
mutate(delta_Cq = as.numeric(delta_Cq))
View(rel_conc_data)
View(delta_cq_data)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(avg_cq_values)
# data pre-processing - averaging technical replicates
# Group the data by the "Target" column and calculate the mean Cq for each group
qpcr_data$Cq <- as.numeric(qpcr_data$Cq)
avg_cq_values <- qpcr_data %>%
group_by(Well.Position, Sample, Target) %>%
summarize(Cq = mean(Cq, na.rm = TRUE))
View(avg_cq_values)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(rel_conc_data)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# Data pre-processing - averaging technical replicates by Sample, Target, Well.Position
qpcr_data$Cq <- as.numeric(qpcr_data$Cq)
avg_cq_values <- qpcr_data %>%
group_by(Sample, Target, Well.Position) %>%
summarize(Cq = mean(Cq, na.rm = TRUE), .groups = 'drop')
View(avg_ref_Cq)
View(avg_cq_values)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
View(test_data)
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
# this script has functions that are usable for any qPCR analysis
source("summer_student_qPCR_functions.R")
# one graph with Path #1:
rel_conc_data <- rel_conc_p1(qpcr_data, probe, reference, ctrl_sample)
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, plot_title))
rel_conc_bar
