install.packages("BiocConductor")
BiocManager::install("GenomicRanges")
install.packages("BiocManager")
BiocManager::install("GenomicRanges")
# Check versions for reproducibility
sessionInfo()
# Check if packages can be updated
valid()
library(tidyr)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(ggbreak)
library(ggforce)
library(tidyverse)
# (CHANGE THESE TO SUIT YOUR NEEDS)
# make sure your qPCR_data and your R scripts are in the same folder (directory)
# and that this is set as your working directory
skip_meta = 20 # number of metadata rows to skip
setwd("~/Desktop/CU_coding/qPCR/raw_data")
qpcr_data <- read.csv("~/Desktop/CU_coding/qPCR/raw_data/Exp38_12.30.24_ZP_20241230_173808_Results_20241230 191325.csv",
skip = skip_meta,
stringsAsFactors = FALSE) # put in path to YOUR data
setwd("~/Desktop/CU_coding/qPCR/code/Exp 38")
# Remove the summarize step so we don't average the Cq values
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "JAK1" # list of probes of interest
reference = "GAPDH" # probe that you're "normalizing" to
ctrl_sample = "U4C Control" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
# Remove the summarize step so we don't average the Cq values
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
View(tidy_qpcr_data)
View(qpcr_data)
ctrl_sample = "JAK1 WT 405" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
# Remove the summarize step so we don't average the Cq values
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Group by Sample and calculate the average Cq
ref_data <- ref_data %>%
group_by(Sample, ref_target) #%>%
# join the test_data and ref_data data frames and form a new column with the calculated delta_cq for each well
delta_cq_data <- inner_join(test_data,
ref_data,
join_by("Well.Position"),
relationship = "one-to-one") %>%
group_by(Well.Position) %>%
mutate(delta_Cq = Cq - ref_Cq)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 405", Sample))
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
# join the test_data and ref_data data frames and form a new column with the calculated delta_cq for each well
delta_cq_data <- inner_join(test_data,
ref_data,
join_by("Sample"),
relationship = "one-to-one") %>%
group_by(Sample) %>%
mutate(delta_Cq = Cq - ref_Cq)
View(ref_data)
# Remove the summarize step so we don't average the Cq values
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Group by Sample and calculate the average Cq
ref_data <- ref_data %>%
group_by(Sample, ref_target) #%>%
# join the test_data and ref_data data frames and form a new column with the calculated delta_cq for each well
delta_cq_data <- inner_join(test_data,
ref_data,
join_by("Sample"),
relationship = "one-to-one") %>%
group_by(Sample) %>%
mutate(delta_Cq = Cq - ref_Cq)
View(delta_cq_data)
View(test_data)
# join the test_data and ref_data data frames and form a new column with the calculated delta_cq for each well
delta_cq_data <- inner_join(test_data,
ref_data,
join_by("Well.Postion"),
relationship = "one-to-one") %>%
group_by(Well.Position) %>%
mutate(delta_Cq = Cq - ref_Cq)
# join the test_data and ref_data data frames and form a new column with the calculated delta_cq for each well
delta_cq_data <- inner_join(test_data,
ref_data,
join_by("Well.Position"),
relationship = "one-to-one") %>%
group_by(Well.Position) %>%
mutate(delta_Cq = Cq - ref_Cq)
View(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 405", Sample))
View(ref_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 405", Sample))
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 405"))
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 405", Sample.x))
View(pTRIP_JAK1_WT)
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
View(rel_conc_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "IFI27" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 405" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
# Remove the summarize step so we don't average the Cq values
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 405", Sample))
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
View(rel_conc_data)
# (CHANGE THESE TO SUIT YOUR NEEDS)
# make sure your qPCR_data and your R scripts are in the same folder (directory)
# and that this is set as your working directory
skip_meta = 20 # number of metadata rows to skip
qpcr_data <- read.csv("~/Desktop/CU_coding/qPCR/raw_data/Exp38_12.30.24_ZP_20241230_173808_Results_20241230 191325.csv",
skip = skip_meta,
stringsAsFactors = FALSE) # put in path to YOUR data
View(qpcr_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "IFI27" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 405" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
# Remove the summarize step so we don't average the Cq values
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 405", Sample))
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
View(rel_conc_data)
