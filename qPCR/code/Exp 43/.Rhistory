ylab(paste0(probe, "/", "B-ACTIN", " Relative Units")) +
theme(plot.title = element_text(size = 16), axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14))
return(rel_conc_bar)
}
# Generate the plot
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, " mRNA"))
rel_conc_bar
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "RSAD2" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 0 IFN" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
# mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
# filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
filter(str_ends(Sample, "IFNG") | str_ends(Sample, "0 IFN")) %>%  # Filter targets that end with "IFN a2b" or "0 IFN"
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 0 IFN", Sample))
pTRIP_JAK1_WT
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
graph_rel_conc <- function(rel_conc_data, fill_color, probe) {
# Filter out rows with NA values in 'rel_conc'
rel_conc_data <- rel_conc_data[complete.cases(rel_conc_data$rel_conc), ]
# Extract group names without numbers at the end
rel_conc_data$group <- gsub("\\s[0-9]+$", "", rel_conc_data$Sample)
# Make a bar graph with individual data points for each technical replicate
rel_conc_bar <- ggplot(rel_conc_data, aes(x = group, y = rel_conc)) +
theme_classic() +
geom_bar(stat = "identity", fill = fill_color, width = 0.5, color = "black", position = position_dodge(width = 0.7)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.8, color = "black", size = 1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5)) +
xlab(probe) +
scale_y_continuous(trans = "log10") +
ylab(paste0(probe, "/", "B-ACTIN", " Relative Units")) +
theme(plot.title = element_text(size = 16), axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14))
return(rel_conc_bar)
}
# Generate the plot
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, " mRNA"))
rel_conc_bar
View(rel_conc_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "IFI27" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 0 IFN" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
# mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
# filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
filter(str_ends(Sample, "IFNa2b") | str_ends(Sample, "0 IFN")) %>%  # Filter targets that end with "IFN a2b" or "0 IFN"
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 0 IFN", Sample))
pTRIP_JAK1_WT
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
graph_rel_conc <- function(rel_conc_data, fill_color, probe) {
# Filter out rows with NA values in 'rel_conc'
rel_conc_data <- rel_conc_data[complete.cases(rel_conc_data$rel_conc), ]
# Extract group names without numbers at the end
rel_conc_data$group <- gsub("\\s[0-9]+$", "", rel_conc_data$Sample)
# Make a bar graph with individual data points for each technical replicate
rel_conc_bar <- ggplot(rel_conc_data, aes(x = group, y = rel_conc)) +
theme_classic() +
geom_bar(stat = "identity", fill = fill_color, width = 0.5, color = "black", position = position_dodge(width = 0.7)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.8, color = "black", size = 1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5)) +
xlab(probe) +
scale_y_continuous(trans = "log10") +
ylab(paste0(probe, "/", "B-ACTIN", " Relative Units")) +
theme(plot.title = element_text(size = 16), axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14))
return(rel_conc_bar)
}
# Generate the plot
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, " mRNA"))
rel_conc_bar
View(rel_conc_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "IFI27" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 0 IFN" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
# mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
# filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
filter(str_ends(Sample, "IFNL2") | str_ends(Sample, "0 IFN")) %>%  # Filter targets that end with "IFN a2b" or "0 IFN"
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 0 IFN", Sample))
pTRIP_JAK1_WT
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
graph_rel_conc <- function(rel_conc_data, fill_color, probe) {
# Filter out rows with NA values in 'rel_conc'
rel_conc_data <- rel_conc_data[complete.cases(rel_conc_data$rel_conc), ]
# Extract group names without numbers at the end
rel_conc_data$group <- gsub("\\s[0-9]+$", "", rel_conc_data$Sample)
# Make a bar graph with individual data points for each technical replicate
rel_conc_bar <- ggplot(rel_conc_data, aes(x = group, y = rel_conc)) +
theme_classic() +
geom_bar(stat = "identity", fill = fill_color, width = 0.5, color = "black", position = position_dodge(width = 0.7)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.8, color = "black", size = 1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5)) +
xlab(probe) +
scale_y_continuous(trans = "log10") +
ylab(paste0(probe, "/", "B-ACTIN", " Relative Units")) +
theme(plot.title = element_text(size = 16), axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14))
return(rel_conc_bar)
}
# Generate the plot
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, " mRNA"))
rel_conc_bar
View(rel_conc_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "IFI27" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 0 IFN" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
# mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
# filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
filter(str_ends(Sample, "IFNG") | str_ends(Sample, "0 IFN")) %>%  # Filter targets that end with "IFN a2b" or "0 IFN"
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 0 IFN", Sample))
pTRIP_JAK1_WT
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
graph_rel_conc <- function(rel_conc_data, fill_color, probe) {
# Filter out rows with NA values in 'rel_conc'
rel_conc_data <- rel_conc_data[complete.cases(rel_conc_data$rel_conc), ]
# Extract group names without numbers at the end
rel_conc_data$group <- gsub("\\s[0-9]+$", "", rel_conc_data$Sample)
# Make a bar graph with individual data points for each technical replicate
rel_conc_bar <- ggplot(rel_conc_data, aes(x = group, y = rel_conc)) +
theme_classic() +
geom_bar(stat = "identity", fill = fill_color, width = 0.5, color = "black", position = position_dodge(width = 0.7)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.8, color = "black", size = 1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5)) +
xlab(probe) +
scale_y_continuous(trans = "log10") +
ylab(paste0(probe, "/", "B-ACTIN", " Relative Units")) +
theme(plot.title = element_text(size = 16), axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14))
return(rel_conc_bar)
}
# Generate the plot
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, " mRNA"))
rel_conc_bar
rel_conc_bar
View(rel_conc_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "MX2" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 0 IFN" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
# mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
# filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
filter(str_ends(Sample, "IFNa2b") | str_ends(Sample, "0 IFN")) %>%  # Filter targets that end with "IFN a2b" or "0 IFN"
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 0 IFN", Sample))
pTRIP_JAK1_WT
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
graph_rel_conc <- function(rel_conc_data, fill_color, probe) {
# Filter out rows with NA values in 'rel_conc'
rel_conc_data <- rel_conc_data[complete.cases(rel_conc_data$rel_conc), ]
# Extract group names without numbers at the end
rel_conc_data$group <- gsub("\\s[0-9]+$", "", rel_conc_data$Sample)
# Make a bar graph with individual data points for each technical replicate
rel_conc_bar <- ggplot(rel_conc_data, aes(x = group, y = rel_conc)) +
theme_classic() +
geom_bar(stat = "identity", fill = fill_color, width = 0.5, color = "black", position = position_dodge(width = 0.7)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.8, color = "black", size = 1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5)) +
xlab(probe) +
scale_y_continuous(trans = "log10") +
ylab(paste0(probe, "/", "B-ACTIN", " Relative Units")) +
theme(plot.title = element_text(size = 16), axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14))
return(rel_conc_bar)
}
# Generate the plot
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, " mRNA"))
rel_conc_bar
View(rel_conc_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "MX2" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 0 IFN" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
# mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
# filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
filter(str_ends(Sample, "IFNL2") | str_ends(Sample, "0 IFN")) %>%  # Filter targets that end with "IFN a2b" or "0 IFN"
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 0 IFN", Sample))
pTRIP_JAK1_WT
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
graph_rel_conc <- function(rel_conc_data, fill_color, probe) {
# Filter out rows with NA values in 'rel_conc'
rel_conc_data <- rel_conc_data[complete.cases(rel_conc_data$rel_conc), ]
# Extract group names without numbers at the end
rel_conc_data$group <- gsub("\\s[0-9]+$", "", rel_conc_data$Sample)
# Make a bar graph with individual data points for each technical replicate
rel_conc_bar <- ggplot(rel_conc_data, aes(x = group, y = rel_conc)) +
theme_classic() +
geom_bar(stat = "identity", fill = fill_color, width = 0.5, color = "black", position = position_dodge(width = 0.7)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.8, color = "black", size = 1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5)) +
xlab(probe) +
scale_y_continuous(trans = "log10") +
ylab(paste0(probe, "/", "B-ACTIN", " Relative Units")) +
theme(plot.title = element_text(size = 16), axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14))
return(rel_conc_bar)
}
# Generate the plot
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, " mRNA"))
rel_conc_bar
View(rel_conc_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "MX2" # list of probes of interest
reference = "JAK1" # probe that you're "normalizing" to
ctrl_sample = "JAK1 WT 0 IFN" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#648FFF"
tidy_qpcr_data <- qpcr_data %>%
mutate(Sample = str_trim(Sample)) %>%
# mutate(Sample = ifelse(Sample == "293T Clone 15", "293T Clone 22", Sample)) %>%
# filter(!Sample %in% c("293T WT", "293T Clone 19", "293T Clone 14", "293T Clone 22")) %>%
filter(str_ends(Sample, "IFNG") | str_ends(Sample, "0 IFN")) %>%  # Filter targets that end with "IFN a2b" or "0 IFN"
group_by(Sample, Target, Well.Position) %>%
mutate(Cq = as.numeric(Cq)) %>%
select(Well.Position, Sample, Target, Cq)
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# Group by Sample and calculate the average Cq
test_data <- test_data %>%
group_by(Sample, Target) #%>%
# Step 1: Calculate the average Cq for the reference gene (JAK1) across technical replicates for each Sample
ref_data_avg <- ref_data %>%
group_by(Sample) %>%
summarize(avg_ref_Cq = mean(ref_Cq, na.rm = TRUE))
# Step 2: Join the test data (target gene, e.g., IFI27) with the averaged reference data
delta_cq_data <- inner_join(test_data, ref_data_avg, by = "Sample") %>%
mutate(delta_Cq = Cq - avg_ref_Cq)  # Calculate delta_Cq using the average reference Cq
# Check the result
print(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("JAK1 WT 0 IFN", Sample))
pTRIP_JAK1_WT
# Calculate average delta_Cq, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output the vector of average delta_Cq
average_delta_Cq_ref
# subtract mean delta_cq for your ctrl_sample from all delta_cq values
delta_delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
graph_rel_conc <- function(rel_conc_data, fill_color, probe) {
# Filter out rows with NA values in 'rel_conc'
rel_conc_data <- rel_conc_data[complete.cases(rel_conc_data$rel_conc), ]
# Extract group names without numbers at the end
rel_conc_data$group <- gsub("\\s[0-9]+$", "", rel_conc_data$Sample)
# Make a bar graph with individual data points for each technical replicate
rel_conc_bar <- ggplot(rel_conc_data, aes(x = group, y = rel_conc)) +
theme_classic() +
geom_bar(stat = "identity", fill = fill_color, width = 0.5, color = "black", position = position_dodge(width = 0.7)) +
geom_point(position = position_jitter(width = 0.2), alpha = 0.8, color = "black", size = 1) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1), axis.title.x = element_blank(), plot.title = element_text(hjust = 0.5)) +
xlab(probe) +
scale_y_continuous(trans = "log10") +
ylab(paste0(probe, "/", "B-ACTIN", " Relative Units")) +
theme(plot.title = element_text(size = 16), axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14))
return(rel_conc_bar)
}
# Generate the plot
rel_conc_bar <- graph_rel_conc(rel_conc_data, fill_color, probe) + ggtitle(paste0(probe, " mRNA"))
rel_conc_bar
View(rel_conc_data)
