tidy_qpcr_data <- qpcr_data %>%
filter(Target != is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
group_by(Well.Position) %>%
mutate(Cq = as.numeric(Cq))
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# No averaging here - keep individual technical replicates
# join the test_data and ref_data data frames and form a new column with the calculated delta_cq for each replicate
delta_cq_data <- inner_join(test_data,
ref_data,
by = "Well.Position") %>%
mutate(delta_Cq = Cq - ref_Cq)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP Luciferase 0 u/mL IFN a2b", Sample))
# Calculate average delta_Cq for reference control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output individual delta_Cq values for each replicate
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
# Output final data with individual replicates
rel_conc_data
View(rel_conc_data)
# Single Graph -------------------------------
# you're welcome to just make one plot and change it up each time!
# here is some simple code to make one plot
# Local variables:
probe = "IFI27" # list of probes of interest
reference = "GAPDH" # probe that you're "normalizing" to
ctrl_sample = "pTRIP JAK1 WT 0 u/mL IFN a2b" # sample you're making everything "relative" to
plot_title = " mRNA"
fill_color = "#DC267F"
# select only columns from qpcr_data that are needed and ensure that values are class numeric
tidy_qpcr_data <- qpcr_data %>%
filter(Target != is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
group_by(Well.Position) %>%
mutate(Cq = as.numeric(Cq))
# create a data table with only Cq values from target being tested (e.g. JAK1)
test_data <- tidy_qpcr_data %>%
filter(Target == probe)
# create a data table with only Cq values from housekeeping gene (e.g. GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
rename("ref_target" = Target) %>%
rename("ref_Cq" = Cq)
# No averaging here - keep individual technical replicates
# join the test_data and ref_data data frames and form a new column with the calculated delta_cq for each replicate
delta_cq_data <- inner_join(test_data,
ref_data,
by = "Well.Position") %>%
mutate(delta_Cq = Cq - ref_Cq)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL IFN a2b", Sample))
# Calculate average delta_Cq for reference control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output individual delta_Cq values for each replicate
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
# Output final data with individual replicates
rel_conc_data
View(rel_conc_data)
View(delta_cq_data)
View(qpcr_data)
View(delta_cq_data)
# No averaging here - keep individual technical replicates
# join the test_data and ref_data data frames and form a new column with the calculated delta_cq for each replicate
delta_cq_data <- inner_join(test_data,
ref_data,
by = "Well.Position") %>%
mutate(delta_Cq = Cq - ref_Cq)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL IFN a2b", Sample.x))
# Calculate average delta_Cq for reference control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output individual delta_Cq values for each replicate
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
# Output final data with individual replicates
rel_conc_data
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL IFN a2b", Sample))
# Calculate average delta_Cq for reference control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Output individual delta_Cq values for each replicate
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-(delta_delta_cq)))
# Output final data with individual replicates
rel_conc_data
# Local variables
probe = "IFI27"  # The probe of interest
reference = "GAPDH"  # The housekeeping gene
ctrl_sample = "pTRIP JAK1 WT 0 u/mL IFN a2b"  # Control sample for relative calculations
plot_title = "mRNA"  # Plot title
fill_color = "#DC267F"  # Fill color for plots
# Step 1: Prepare the data
tidy_qpcr_data <- qpcr_data %>%
filter(!is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
mutate(Cq = as.numeric(Cq))  # Ensure Cq values are numeric
# Step 2: Create a data table with only Cq values from the probe being tested (e.g., IFI27)
test_data <- tidy_qpcr_data %>%
filter(Target == probe) %>%
select(Sample, Well.Position, Cq)  # Keep individual replicates
# Step 3: Create a data table with only Cq values from the reference gene (e.g., GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
select(Sample, Well.Position, Cq) %>%
rename(ref_Cq = Cq)  # Rename for clarity
# Step 4: Join the test_data and ref_data data frames without aggregating replicates
delta_cq_data <- inner_join(test_data, ref_data, by = c("Sample", "Well.Position")) %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Step 5: Filter data for the control sample
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl(ctrl_sample, Sample))
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Output final data with individual replicates
rel_conc_data
View(pTRIP_JAK1_WT)
# Step 5: Filter data for the control sample
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl(ctrl_sample, Sample))
# Local variables
probe = "IFI27"  # The probe of interest
reference = "GAPDH"  # The housekeeping gene
ctrl_sample = "pTRIP JAK1 WT 0 u/mL IFN a2b"  # Control sample for relative calculations
plot_title = "mRNA"  # Plot title
fill_color = "#DC267F"  # Fill color for plots
# Step 1: Prepare the data
tidy_qpcr_data <- qpcr_data %>%
filter(!is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
mutate(Cq = as.numeric(Cq))  # Ensure Cq values are numeric
# Step 2: Create a data table with only Cq values from the probe being tested (e.g., IFI27)
test_data <- tidy_qpcr_data %>%
filter(Target == probe) %>%
select(Sample, Well.Position, Cq)  # Keep individual replicates
# Step 3: Create a data table with only Cq values from the reference gene (e.g., GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
select(Sample, Well.Position, Cq) %>%
rename(ref_Cq = Cq)  # Rename for clarity
# Step 4: Join the test_data and ref_data data frames without aggregating replicates
delta_cq_data <- inner_join(test_data, ref_data, by = c("Sample", "Well.Position")) %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Step 5: Filter data for the control sample
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(Sample == ctrl_sample)  # Use exact match instead of grepl
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Output final data with individual replicates
rel_conc_data
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL IFN a2b", Sample))
View(pTRIP_JAK1_WT)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL IFN a2b", Sample))
View(delta_cq_data)
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL a2b", Sample))
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Output final data with individual replicates
rel_conc_data
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL a2b", Sample))
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Output final data with individual replicates
rel_conc_data
View(rel_conc_data)
rel_conc_data <- rel_conc_data %>%
filter(Sample != "pTRIP Luciferase 0 u/mL IFN a2b") %>%
filter(Sample != "pTRIP Luciferase 10 u/mL a2b") %>%
filter(Sample != "pTRIP Luciferase 100 u/mL a2b")
# Output final data with individual replicates
rel_conc_data
# Local variables
probe = "IFI27"  # The probe of interest
reference = "JAK1"  # The reference gene changed to JAK1
ctrl_sample = "pTRIP JAK1 WT 0 u/mL IFN a2b"  # Control sample for relative calculations
plot_title = "mRNA"  # Plot title
fill_color = "#DC267F"  # Fill color for plots
# Step 1: Prepare the data
tidy_qpcr_data <- qpcr_data %>%
filter(!is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
mutate(Cq = as.numeric(Cq))  # Ensure Cq values are numeric
# Step 2: Create a data table with only Cq values from the probe being tested (e.g., IFI27)
test_data <- tidy_qpcr_data %>%
filter(Target == probe) %>%
select(Sample, Well.Position, Cq)  # Keep individual replicates
# Step 3: Create a data table with only Cq values from the reference gene (JAK1)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
select(Sample, Well.Position, Cq) %>%
rename(ref_Cq = Cq)  # Rename for clarity
# Step 4: Join the test_data and ref_data data frames without aggregating replicates
delta_cq_data <- inner_join(test_data, ref_data, by = c("Sample", "Well.Position")) %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Step 5: Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl(ctrl_sample, Sample))  # Use ctrl_sample for filtering
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Step 9: Filter out specific samples
rel_conc_data <- rel_conc_data %>%
filter(!Sample %in% c("pTRIP Luciferase 0 u/mL IFN a2b",
"pTRIP Luciferase 10 u/mL a2b",
"pTRIP Luciferase 100 u/mL a2b"))
# Output final data with individual replicates
rel_conc_data
# Local variables
probe = "IFI27"  # The probe of interest
reference = "JAK1"  # The reference gene
ctrl_sample = "pTRIP JAK1 WT 0 u/mL IFN a2b"  # Control sample for relative calculations
plot_title = "mRNA"  # Plot title
fill_color = "#DC267F"  # Fill color for plots
# Step 1: Prepare the data
tidy_qpcr_data <- qpcr_data %>%
filter(!is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
mutate(Cq = as.numeric(Cq))  # Ensure Cq values are numeric
# Step 2: Create a data table with only Cq values from the probe being tested (IFI27)
test_data <- tidy_qpcr_data %>%
filter(Target == probe) %>%
select(Sample, Cq)  # Keep individual replicates, removing Well.Position
# Step 3: Create a data table with only Cq values from the reference gene (JAK1)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
select(Sample, Cq) %>%
rename(ref_Cq = Cq)  # Rename for clarity
# Step 4: Join the test_data and ref_data data frames without aggregating replicates
# Here we need to summarize the reference data per sample since they are in different wells
ref_data_summary <- ref_data %>%
group_by(Sample) %>%
summarize(ref_Cq = mean(ref_Cq, na.rm = TRUE))  # Average the reference Cq values for each sample
delta_cq_data <- inner_join(test_data, ref_data_summary, by = "Sample") %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Step 5: Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl(ctrl_sample, Sample))  # Use ctrl_sample for filtering
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Step 9: Filter out specific samples
rel_conc_data <- rel_conc_data %>%
filter(!Sample %in% c("pTRIP Luciferase 0 u/mL IFN a2b",
"pTRIP Luciferase 10 u/mL a2b",
"pTRIP Luciferase 100 u/mL a2b"))
# Output final data with individual replicates
rel_conc_data
View(delta_cq_data)
# Step 5: Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl(ctrl_sample, Sample))  # Use ctrl_sample for filtering
ctrl_sample = "pTRIP JAK1 WT 0 u/mL a2b"  # Control sample for relative calculations
delta_cq_data <- inner_join(test_data, ref_data_summary, by = "Sample") %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Step 5: Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl(ctrl_sample, Sample))  # Use ctrl_sample for filtering
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Step 9: Filter out specific samples
rel_conc_data <- rel_conc_data %>%
filter(!Sample %in% c("pTRIP Luciferase 0 u/mL IFN a2b",
"pTRIP Luciferase 10 u/mL a2b",
"pTRIP Luciferase 100 u/mL a2b"))
# Output final data with individual replicates
rel_conc_data
# Local variables
probe = "MX1"  # The probe of interest
reference = "GAPDH"  # The housekeeping gene
# Local variables
probe = "MX1"  # The probe of interest
reference = "GAPDH"  # The housekeeping gene
ctrl_sample = "pTRIP JAK1 WT 0 u/mL a2b"  # Control sample for relative calculations
plot_title = "mRNA"  # Plot title
fill_color = "#DC267F"  # Fill color for plots
# Step 1: Prepare the data
tidy_qpcr_data <- qpcr_data %>%
filter(!is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
mutate(Cq = as.numeric(Cq))  # Ensure Cq values are numeric
# Step 2: Create a data table with only Cq values from the probe being tested (e.g., IFI27)
test_data <- tidy_qpcr_data %>%
filter(Target == probe) %>%
select(Sample, Well.Position, Cq)  # Keep individual replicates
# Step 3: Create a data table with only Cq values from the reference gene (e.g., GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
select(Sample, Well.Position, Cq) %>%
rename(ref_Cq = Cq)  # Rename for clarity
# Step 4: Join the test_data and ref_data data frames without aggregating replicates
delta_cq_data <- inner_join(test_data, ref_data, by = c("Sample", "Well.Position")) %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL a2b", Sample))
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
rel_conc_data <- rel_conc_data %>%
filter(Sample != "pTRIP Luciferase 0 u/mL IFN a2b") %>%
filter(Sample != "pTRIP Luciferase 10 u/mL a2b") %>%
filter(Sample != "pTRIP Luciferase 100 u/mL a2b")
# Output final data with individual replicates
rel_conc_data
# Local variables
probe = "MX1"  # The probe of interest
reference = "JAK1"  # The reference gene
ctrl_sample = "pTRIP JAK1 WT 0 u/mL a2b"  # Control sample for relative calculations
plot_title = "mRNA"  # Plot title
fill_color = "#DC267F"  # Fill color for plots
# Step 1: Prepare the data
tidy_qpcr_data <- qpcr_data %>%
filter(!is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
mutate(Cq = as.numeric(Cq))  # Ensure Cq values are numeric
# Step 2: Create a data table with only Cq values from the probe being tested (IFI27)
test_data <- tidy_qpcr_data %>%
filter(Target == probe) %>%
select(Sample, Cq)  # Keep individual replicates, removing Well.Position
# Step 3: Create a data table with only Cq values from the reference gene (JAK1)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
select(Sample, Cq) %>%
rename(ref_Cq = Cq)  # Rename for clarity
# Step 4: Join the test_data and ref_data data frames without aggregating replicates
# Here we need to summarize the reference data per sample since they are in different wells
ref_data_summary <- ref_data %>%
group_by(Sample) %>%
summarize(ref_Cq = mean(ref_Cq, na.rm = TRUE))  # Average the reference Cq values for each sample
delta_cq_data <- inner_join(test_data, ref_data_summary, by = "Sample") %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Step 5: Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl(ctrl_sample, Sample))  # Use ctrl_sample for filtering
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Step 9: Filter out specific samples
rel_conc_data <- rel_conc_data %>%
filter(!Sample %in% c("pTRIP Luciferase 0 u/mL IFN a2b",
"pTRIP Luciferase 10 u/mL a2b",
"pTRIP Luciferase 100 u/mL a2b"))
# Output final data with individual replicates
rel_conc_data
# Local variables
probe = "RSAD2"  # The probe of interest
reference = "GAPDH"  # The housekeeping gene
ctrl_sample = "pTRIP JAK1 WT 0 u/mL a2b"  # Control sample for relative calculations
plot_title = "mRNA"  # Plot title
fill_color = "#DC267F"  # Fill color for plots
# Step 1: Prepare the data
tidy_qpcr_data <- qpcr_data %>%
filter(!is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
mutate(Cq = as.numeric(Cq))  # Ensure Cq values are numeric
# Step 2: Create a data table with only Cq values from the probe being tested (e.g., IFI27)
test_data <- tidy_qpcr_data %>%
filter(Target == probe) %>%
select(Sample, Well.Position, Cq)  # Keep individual replicates
# Step 3: Create a data table with only Cq values from the reference gene (e.g., GAPDH)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
select(Sample, Well.Position, Cq) %>%
rename(ref_Cq = Cq)  # Rename for clarity
# Step 4: Join the test_data and ref_data data frames without aggregating replicates
delta_cq_data <- inner_join(test_data, ref_data, by = c("Sample", "Well.Position")) %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl("pTRIP JAK1 WT 0 u/mL a2b", Sample))
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
rel_conc_data <- rel_conc_data %>%
filter(Sample != "pTRIP Luciferase 0 u/mL IFN a2b") %>%
filter(Sample != "pTRIP Luciferase 10 u/mL a2b") %>%
filter(Sample != "pTRIP Luciferase 100 u/mL a2b")
# Output final data with individual replicates
rel_conc_data
# Local variables
probe = "RSAD2"  # The probe of interest
reference = "JAK1"  # The reference gene
ctrl_sample = "pTRIP JAK1 WT 0 u/mL a2b"  # Control sample for relative calculations
plot_title = "mRNA"  # Plot title
fill_color = "#DC267F"  # Fill color for plots
# Step 1: Prepare the data
tidy_qpcr_data <- qpcr_data %>%
filter(!is.na(Target) & Target != "") %>%
select(Well.Position, Sample, Target, Cq) %>%
mutate(Cq = as.numeric(Cq))  # Ensure Cq values are numeric
# Step 2: Create a data table with only Cq values from the probe being tested (IFI27)
test_data <- tidy_qpcr_data %>%
filter(Target == probe) %>%
select(Sample, Cq)  # Keep individual replicates, removing Well.Position
# Step 3: Create a data table with only Cq values from the reference gene (JAK1)
ref_data <- tidy_qpcr_data %>%
filter(Target == reference) %>%
select(Sample, Cq) %>%
rename(ref_Cq = Cq)  # Rename for clarity
# Step 4: Join the test_data and ref_data data frames without aggregating replicates
# Here we need to summarize the reference data per sample since they are in different wells
ref_data_summary <- ref_data %>%
group_by(Sample) %>%
summarize(ref_Cq = mean(ref_Cq, na.rm = TRUE))  # Average the reference Cq values for each sample
delta_cq_data <- inner_join(test_data, ref_data_summary, by = "Sample") %>%
mutate(delta_Cq = Cq - ref_Cq)  # Calculate delta Cq for each technical replicate
# Step 5: Filter data for "pTRIP JAK1 WT" samples
pTRIP_JAK1_WT <- delta_cq_data %>%
filter(grepl(ctrl_sample, Sample))  # Use ctrl_sample for filtering
# Step 6: Calculate average delta_Cq for the control sample, handling NA values
average_delta_Cq_ref <- mean(pTRIP_JAK1_WT$delta_Cq, na.rm = TRUE)
# Step 7: Calculate delta_delta_Cq for all replicates
delta_cq_data <- delta_cq_data %>%
mutate(delta_delta_cq = delta_Cq - average_delta_Cq_ref)
# Step 8: Find the relative concentrations of the target being tested for every sample
rel_conc_data <- delta_cq_data %>%
mutate(rel_conc = 2^(-delta_delta_cq))  # Calculate relative concentrations
# Step 9: Filter out specific samples
rel_conc_data <- rel_conc_data %>%
filter(!Sample %in% c("pTRIP Luciferase 0 u/mL IFN a2b",
"pTRIP Luciferase 10 u/mL a2b",
"pTRIP Luciferase 100 u/mL a2b"))
# Output final data with individual replicates
rel_conc_data
